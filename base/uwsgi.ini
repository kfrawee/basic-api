[uwsgi]
master = true
strict = true
need-app = true ; stop if app not loaded
lazy-apps = true ; load app in each worker instead of the master
vacuum = true ; vacuum sockets
procname-prefix = basic_api_server_
single-interpreter = true ; signle interpreter to avoid threadstate

chdir = ..
module = base.wsgi
home = /home/ubuntu/basic-api/.venv

# http-socket
http-socket = :8000 ; http over unix socket                                        
listen = 4048 ; socket queue
socket-timeout = 120

# worker
enable-threads = true ; enable thereading for modules like celery
#threads = 2 ; threads
max-requests = 10000 ; max requests
reload-on-rss = 1333 ; reload if rss memory is higher than specified megabytes
max-worker-lifetime = 3600 ; reload worker after the specified amount of seconds
worker-reload-mercy = 1 ; set the maximum time a worker can take to reload/shutdown

cheaper-algo = busyness              
processes = 1                       ; Maximum number of workers allowed
cheaper = 1                         ; Minimum number of workers allowed
cheaper-initial = 1                 ; Workers created at startup
cheaper-overload = 1                ; Length of a cycle in seconds
cheaper-step = 1                    ; How many workers to spawn at a time

cheaper-busyness-multiplier = 10     ; How many cycles to wait before killing workers
cheaper-busyness-min = 25            ; Below this threshold, kill workers (if stable for multiplier cycles)
cheaper-busyness-max = 45            ; Above this threshold, spawn new workers
cheaper-busyness-backlog-alert = 16  ; Spawn emergency workers if more than this many requests are waiting in the queue
cheaper-busyness-backlog-step = 5    ; How many emergegency workers to create if there are too many requests in the queue

die-on-term = true ; SIGTERM
thunder-lock = true ; zeeg probelm
daemonize = /dev/null
disable-logging = true
stats = 127.0.0.1:1717

buffer-size = 32768

touch-chain-reload = /tmp/uwsgi.reload